{"version":3,"sources":["components/Header.js","components/Footer.js","components/ProjectList.js","components/ProjectDetail.js","components/UserList.js","components/TaskList.js","components/Main.js","components/LoginForm.js","components/RegisterForm.js","App.js","reportWebVitals.js","index.js"],"names":["Header","loginLink","loginTitle","loginHandler","isAuthenticated","logout","className","to","onClick","Footer","Project","project","id","name","created","ProjectList","projects","map","ProjectDetail","users","useParams","filter","item","owner","find","members","includes","username","updated","desc","User","user","date_birth","UserList","Task","task","title","text","status","TaskList","tasks","Main","LoginForm","props","state","password","event","this","setState","target","value","preventDefault","login","method","onSubmit","handleSubmit","type","placeholder","onChange","handleChange","React","Component","RegisterForm","password1","password2","email","register","getResourceURL","suffix","App","accessToken","getAccessToken","loadState","headers","getHeaders","axios","get","then","result","data","catch","error","console","log","post","refreshToken","refresh","access","saveTokens","localStorage","setItem","clearState","getItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3000807.chunk.js","sourcesContent":["import {NavLink as Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction Header({isAuthenticated, logout}) {\r\n    let loginLink, loginTitle, loginHandler;\r\n    loginLink = \"/login\";\r\n    loginTitle = \"login\";\r\n    if (isAuthenticated) {\r\n        loginLink = \"/logout\";\r\n        loginTitle = \"logout\";\r\n        loginHandler = logout;\r\n    }\r\n    return (\r\n        <header className=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom\">\r\n            <Link to={\"/\"}\r\n                  className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto text-dark text-decoration-none\">\r\n                DashBoard\r\n            </Link>\r\n            <ul className=\"nav nav-pills\">\r\n                <li className=\"nav-item\">\r\n                    <Link to={\"/users\"} className=\"nav-link\">\r\n                        Users\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to={\"/projects\"} className=\"nav-link\">\r\n                        Projects\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to={\"/tasks\"} className=\"nav-link\">\r\n                        Tasks\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to={loginLink} className=\"nav-link\" onClick={loginHandler}>\r\n                        {loginTitle}\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            &copy; KPK, 2021\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import {NavLink as Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Project = ({project}) => {\r\n    // console.log('project:', project);\r\n    return (\r\n        <tr className=\"project-row\">\r\n            <td>\r\n                {project.id}\r\n            </td>\r\n            <td>\r\n                <Link to={`/projects/detail/${project.id}`} className=\"nav-link\">\r\n                        {project.name}\r\n                </Link>\r\n            </td>\r\n            <td>\r\n                {project.created}\r\n            </td>\r\n            <td>\r\n                <Link to={`/projects/delete/${project.id}`} className=\"nav-link\">\r\n                        delete\r\n                </Link>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProjectList = ({projects}) => {\r\n    // console.log('projects:', projects);\r\n    // this.props.projects\r\n    return (\r\n        <div className=\"project-list\">\r\n            <h1>Projects</h1>\r\n            <table className=\"project-list__table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>id</th>\r\n                    <th>name</th>\r\n                    <th>created</th>\r\n                    <th>actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {projects.map((project) => <Project key={project.id} project={project}/>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;\r\n\r\n","import React from \"react\";\r\nimport {useParams} from \"react-router\";\r\n\r\nconst ProjectDetail = ({projects, users}) => {\r\n    let {id} = useParams();\r\n    let project = projects.filter((item) => item.id === +id)[0];\r\n    // project = filter(projects, lambda item: item.id == int(id));\r\n    // console.log('this project:', project);\r\n    // console.log('users', users);\r\n    let owner = users.find((item) => project.owner === item.id);\r\n    // console.log('owner', owner);\r\n    let members = users.filter((item) => project.members.includes(item.id));\r\n    // console.log('members', members);\r\n\r\n    return (\r\n        <div className={\"project-detail\"}>\r\n            <h2>Project: {project.name}</h2>\r\n            <h3>Owner: {owner.username}</h3>\r\n            <p>Created: {project.created}</p>\r\n            <p>Updated: {project.updated}</p>\r\n            <h4>Members:</h4>\r\n            <ul>\r\n                {members.map((item) => (\r\n                    <li key={item.id}>{item.username}</li>\r\n                ))}\r\n            </ul>\r\n            <p>Description: {project.desc}</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectDetail;\r\n\r\n","const User = ({user}) => {\r\n    // console.log('user:', user);\r\n    return (\r\n        <tr className=\"user-row\">\r\n            <td>\r\n                {user.id}\r\n            </td>\r\n            <td>\r\n                {user.username}\r\n            </td>\r\n            <td>\r\n                {user.date_birth}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UserList = ({users}) => {\r\n    // console.log('users:', users);\r\n    return (\r\n        <div className=\"user-list\">\r\n            <h1>Users</h1>\r\n            <table className=\"user-list__table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>id</th>\r\n                    <th>username</th>\r\n                    <th>date birth</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {users.map((user) => <User key={user.id} user={user}/>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserList;\r\n","const Task = ({task}) => {\r\n    // console.log('task:', task);\r\n    return (\r\n        <tr className=\"task-row\">\r\n            <td>\r\n                {task.id}\r\n            </td>\r\n            <td>\r\n                {task.title}\r\n            </td>\r\n            <td>\r\n                {task.text}\r\n            </td>\r\n            <td>\r\n                {task.created}\r\n            </td>\r\n            <td>\r\n                {task.updated}\r\n            </td>\r\n            <td>\r\n                {task.status ? \"solved\" : \"in progress\"}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst TaskList = ({tasks}) => {\r\n    // console.log('tasks:', tasks);\r\n    return (\r\n        <div className=\"task-list\">\r\n            <h1>Tasks</h1>\r\n            <table className=\"task-list__table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>id</th>\r\n                    <th>title</th>\r\n                    <th>text</th>\r\n                    <th>created</th>\r\n                    <th>updated</th>\r\n                    <th>status</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tasks.map((task) => <Task key={task.id} task={task}/>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList;\r\n\r\n","const Main = () => {\r\n    return (\r\n        <h1>\r\n            Hello from SPA\r\n        </h1>\r\n    )\r\n}\r\n\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name]: event.target.value}\r\n        )\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.login(this.state.username, this.state.password);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-form\">\r\n                <form method=\"post\"\r\n                      onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <input type=\"text\"\r\n                           name=\"username\"\r\n                           placeholder=\"username\"\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                    <input type=\"password\"\r\n                           name=\"password\"\r\n                           placeholder=\"password\"\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                    <input type=\"submit\"\r\n                           value=\"login\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginForm\r\n","import React from \"react\";\r\n\r\n\r\nclass RegisterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            email: \"\",\r\n        };\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name]: event.target.value}\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.register(\r\n            this.state.username,\r\n            this.state.password1,\r\n            this.state.password2,\r\n            this.state.email\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-form\">\r\n                <form method=\"post\"\r\n                      onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <input type=\"text\"\r\n                           name=\"username\"\r\n                           placeholder=\"username\"\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                    <input type=\"password\"\r\n                           name=\"password\"\r\n                           placeholder=\"password\"\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                    <input type=\"submit\"\r\n                           value=\"login\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RegisterForm\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ProjectList from \"./components/ProjectList\";\nimport ProjectDetail from \"./components/ProjectDetail\";\nimport UserList from \"./components/UserList\";\nimport TaskList from \"./components/TaskList\";\nimport Main from \"./components/Main\";\nimport axios from \"axios\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\n\nconst API_URL = \"http://127.0.0.1:8000\";\nconst getResourceURL = (suffix) => `${API_URL}/api/${suffix}/`;\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);  // parent constructor\n        this.state = {\n            users: [],\n            projects: [],\n            tasks: [],\n            accessToken: this.getAccessToken(),\n        };\n        // bind\n    }\n\n    componentDidMount() {\n        this.loadState()\n    }\n\n    loadState() {\n        let headers = this.getHeaders();\n\n        // call rest API\n        axios\n            .get(getResourceURL(\"users\"), {headers: headers})\n            .then((result) => {\n                // console.log('users result:', result)\n                this.setState({\n                    users: result.data\n                })\n            })\n            .catch((error) => console.log(error));\n        axios\n            .get(getResourceURL(\"projects\"), {headers: headers})\n            .then((result) => {\n                this.setState({\n                    projects: result.data\n                })\n            })\n            .catch((error) => console.log(error));\n        axios\n            .get(getResourceURL(\"project-tasks\"), {headers: headers})\n            .then((result) => {\n                this.setState({\n                    tasks: result.data\n                })\n            })\n            .catch((error) => console.log(error));\n\n    }\n\n    login(username, password) {\n        // console.log('do login', username, password);\n        axios\n            .post(getResourceURL(\"token\"),\n                {\"username\": username, \"password\": password})\n            .then((result) => {\n                let refreshToken = result.data.refresh;\n                let accessToken = result.data.access;\n                console.log(accessToken)\n\n                this.saveTokens(refreshToken, accessToken)\n                this.setState({accessToken: accessToken}, this.loadState)\n            })\n            .catch((error) => console.log(error));\n    }\n\n    register(username, password1, password2, email) {\n        console.log('do register', username, password1, password2, email);\n        // axios\n        //     .post(getResourceURL(\"token\"),\n        //         {\"username\": username, \"password\": password})\n        //     .then((result) => {\n        //         let refreshToken = result.data.refresh;\n        //         let accessToken = result.data.access;\n        //         console.log(accessToken)\n        //\n        //         this.saveTokens(refreshToken, accessToken)\n        //         this.setState({accessToken: accessToken}, this.loadState)\n        //     })\n        //     .catch((error) => console.log(error));\n    }\n\n    logout() {\n        // console.log('do logout');\n        localStorage.setItem('refreshToken', null);\n        localStorage.setItem('accessToken', null);\n        this.clearState();\n    }\n\n    clearState() {\n        this.setState({\n            accessToken: null,\n            users: [],\n            projects: [],\n            tasks: [],\n        })\n    }\n\n    saveTokens(refreshToken, accessToken) {\n        localStorage.setItem('refreshToken', refreshToken);\n        localStorage.setItem('accessToken', accessToken);\n    }\n\n    getAccessToken() {\n        return localStorage.getItem('accessToken')\n    }\n\n    isAuthenticated() {\n        return this.state.accessToken !== 'null' && this.state.accessToken !== null;\n    }\n\n    getHeaders() {\n        let headers = {\n            'Content-Type': \"application/json\"\n        }\n        if (this.isAuthenticated()) {\n            headers['Authorization'] = `Bearer ${this.state.accessToken}`\n        }\n\n        return headers;\n    }\n\n    render() {\n        // console.log('state', this.state);\n        return (\n            <div className=\"main\">\n                <Router>\n                    <Header isAuthenticated={this.isAuthenticated()}\n                            logout={() => this.logout()}/>\n                    <Route exact path=\"/\">\n                        <Main/>\n                    </Route>\n                    <Route exact path=\"/users\">\n                        <UserList users={this.state.users}/>\n                    </Route>\n                    <Route exact path=\"/projects\">\n                        <ProjectList projects={this.state.projects}/>\n                    </Route>\n                    <Route exact path=\"/projects/detail/:id\">\n                        <ProjectDetail projects={this.state.projects}\n                                       users={this.state.users}/>\n                    </Route>\n                    <Route exact path=\"/tasks\">\n                        <TaskList tasks={this.state.tasks}/>\n                    </Route>\n                    <Route exact path=\"/login\">\n                        <LoginForm\n                            login={(username, password) => this.login(username, password)}/>\n                    </Route>\n                    <Route exact path=\"/register\">\n                        <RegisterForm\n                            register={(username, password1, password2, email) =>\n                                this.register(username, password1, password2, email)}/>\n                    </Route>\n                </Router>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}